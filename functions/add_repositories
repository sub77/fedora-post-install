#!/bin/bash

# Add RPM Fusion
function add_rpmfusion_repo() {
	echo_message header "Starting 'add_rpmfusion' function"
	# Check if valid RPM Fusion repository
	if [[ "$1" = "free" ]] || [[ "$1" = "nonfree" ]] ; then
		# Check if already present
		if [ -e /etc/yum.repos.d/rpmfusion-$1.repo ]; then
			echo_message info "RPM Fusion (${1^}) repository already added."
			whiptail --msgbox "The RPM Fusion (${1^}) repository is already added." 8 56
			$2
		else
			# Add repository
			echo_message info "Downloading RPM Fusion repository package..."
			elevate_privilege "dnf install -y https://download1.rpmfusion.org/$1/fedora/rpmfusion-$1-release-$(rpm -E %fedora).noarch.rpm"
			# Finished
			echo_message success "RPM Fusion (${1^}) repository has been added."
			whiptail --title "Finished" --msgbox "RPM Fusion (${1^}) repository has been added." 8 56
			$2
		fi
	else
		# If there is an error
		echo_message error "Not a valid RPM Fusion repository. Aborting..."
		whiptail --msgbox "Not a valid RPM Fusion repository. Sorry, try again." --title "Oops" 8 56
		$2
	fi
}

# Add Flatpak Repo
function add_flatpak_repo() {
	echo_message header "Starting 'add_flatpak_repo' function"
	# Check
	check_flatpak_repo $1
	# If repo is added
	if [ $? = 0 ]; then
		echo_message info "Repository already added."
		whiptail --msgbox "The $1 repository is already added." 8 56
	else
		# Add repository
		echo_message info "Adding flatpak repository..."
		flatpak remote-add --if-not-exists $1 $2
		echo_message success "Repository added."
		whiptail --title "Finished" --msgbox "The '$1' repository has been added." 8 56
	fi
}

# Add Google Cloud SDK
function add_googlecloudsdk_repo() {
	echo_message header "Starting 'add_cloudsdk' function"
	# Check if valid Google Cloud SDK repository
	if [[ "$1" = "" ]] ; then
		# Check if already present
		if [ -e /etc/yum.repos.d/google-cloud-sdk.repo ]; then
			echo_message info "Google Cloud SDK repository already added."
			whiptail --msgbox "The Google Cloud SDK repository is already added." 8 56
			$2
		else
			# Add repository
			echo_message info "Downloading Google Cloud SDK repository package..."
			elevate_privilege "`sudo tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM
[google-cloud-sdk]
name=Google Cloud SDK
baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOM`"
			# Finished
			echo_message success "Google Cloud SDK repository has been added."
			whiptail --title "Finished" --msgbox "Google Cloud SDK repository has been added." 8 56
			$2
		fi
	else
		# If there is an error
		echo_message error "Not a valid Google Cloud SDK repository. Aborting..."
		whiptail --msgbox "Not a valid Google Cloud SDK repository. Sorry, try again." --title "Oops" 8 56
		$2
	fi
}

# Add Repositories
function add_repositories {
	echo_message header "Starting 'add_repositories' function"
	NAME="Third-Party Repositories"
	echo_message title "Starting addition of ${NAME,,}..."
	# Draw window
	REPOS=$(eval `resize` && whiptail \
		--notags \
		--title "$NAME" \
		--menu "\nWhat ${NAME,,} would you like to add?" \
		--ok-button "Install" \
		--cancel-button "Go Back" \
		$LINES $COLUMNS $(( $LINES - 12 )) \
		"rpmfusion_free"		"RPM Fusion (Free)" \
		"rpmfusion_nonfree"		"RPM Fusion (Non-free)" \
		"add_flathub"			"FlatHub" \
		"add_googlecloud"		"GoogleCloudSDK" \
		3>&1 1>&2 2>&3)
	# check exit status
	while [ $? -eq 0 ]; do
		case "${REPOS}" in
		# RPM Fusion Free
		rpmfusion_free)
			add_rpmfusion "free" add_repositories
		;;
		# RPM Fusion Non-free
		rpmfusion_nonfree)
			add_rpmfusion "nonfree" add_repositories
		;;
		# FlatHub
		add_flathub)
			REPONAME="flathub"
			REPO="https://dl.flathub.org/repo/flathub.flatpakrepo"
			add_flatpak_repo $REPONAME $REPO
			add_repositories
		;;
		# Google Cloud SDK
		add_googlecloud)
			add_googlecloudsdk_repo
			add_repositories
		;;
		# Go Back
		*)
			# Cancelled
			echo_message info "Addition of ${NAME,,} cancelled."
			main
		;;
		esac
	done
}
